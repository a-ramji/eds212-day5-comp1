---
title: "Day 5 Session 1"
format: 
  html: 
    code-fold: true
    code-summary: "Show me the code!"
editor: visual
execute:
  echo: true 
  warning: false 
---

## Day 5 Computer Session 1

-   setting warning to false is a cleaner way to show your code -- still read them when you're writing your code, but your audience probably doesn't need to read those messages :)

-   code folding gives your audience an option to hide or reveal the code

    -   done in the top section in html format -- enter, + 2 spaces, enter + 2 spaces:

    title: "Day 5 Session 1"

    format:

    html:

    code-fold: true

    code-summary: "Show me the code!"

    editor: visual

    execute:

    echo: true

    warning: false

-   you can also set options for each chunk of code individually

```{r}
library(tidyverse)
```

## Explore the StarWars data set

```{r}
# look at the first 6 lines
head(starwars)
```

```{r}
# find the dimensions of starwars
dim(starwars) # 87 rows, 14 columns 
```

```{r}
# make a histogram of character heights

ggplot(data = starwars, aes(x = height,
                            fill = gender)) +
  geom_histogram() +
  theme_minimal()
```

```{r}
# make a scatterplot of height vs. weight

ggplot(data = starwars, aes(x = height, 
                            y = mass, 
                            color = sex)) +
  geom_point() +
  theme_minimal()
```

-   using starwars\$height (for example) in console, returns a vector of all height values in our data set

    -   we can see some values are NA

-   in console: class(starwars\$height) returns "integer"

-   

## Calculate Summary Statistics

use mean() function to find means.

use sd() function to find standard deviations.

```{r}
na_mean_height <- mean(starwars$height)

# mean_height returns NA, which is expected
# if you have missing or unknown values in a vector, the default is to say NA because there are unknown values -- use na.rm (rm = remove), set to true or false -- NA values are to be stripped before finding the mean value. default is FALSE (this is why NA was returned)
# other default is to not trim (trim = 0)

```

mean height (in cm)

```{r}
mean_height <- mean(starwars$height, na.rm = TRUE)
mean_height
```

find and store the standard deviation of character heights (in cm)

```{r}
sd_height <- sd(starwars$height, na.rm = TRUE)
sd_height
```

finding variance of character height

```{r}
var(starwars$height, na.rm = TRUE)
```

finding summary info --- by --- (other variables, like home world)

## In-line reporting using code outputs

The mean height of Star Wars characters is 174.38 cm with a standard deviation of 34.77 cm.

(gross to manually type in values because these values are manually disconnected from the values calculated in some code earlier.)

we make mistakes (and should expect to) when manually copying and pasting or typing values out

in computational notebooks, we can pull values to report them in text -- automatically!

we can use two back-ticks \`\-- \` with r variable_name in between the back-ticks

better version:

The mean height of Star Wars characters is `r mean_height` cm with a standard deviation of `r sd_height` cm.

long and un-rounded numbers here. we can wrap them in a round function

mean: `r round(mean_height, digits = 2)` cm

standard deviation: `r round(sd_height, digits = 2)` cm

```{r}

```
